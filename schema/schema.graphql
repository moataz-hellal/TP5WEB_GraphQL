enum Gender {
  MALE
  FEMALE
}
type Infos {
  name: String!
  firstname: String!
}
type Student {
  id: ID!
  name: String!
  age: Int!
  gender: Gender!
  classroom: Classroom
}
type Classroom {
  id: ID!
  designation: String!
  students: [Student!]
}

enum TodoStatus {
  WAITING
  IN_PROGRESS
  CANCELED
  DONE
}

type Todo {
  id: String!
  name: String!
  content: String!
  status: TodoStatus!
  user: User!
}

type User {
  id: String!
  name: String!
  email: String
  todos: [Todo]
}

type Query {
  hello(name: String): String!
  infos: Infos!
  getAllStudents: [Student]
  getStudent(id: ID!): Student
  getAllTodos: [Todo]
  getTodo(id: String): Todo
  getUser(id: String): User
  getUsers: [User]
}
type Mutation {
  addTodo(addTodoInput: TodoAddInput): Todo
  updateTodo(id: Int!, updateTodoInput: TodoUpdateInput!): Todo!
  deleteTodo(id: Int!): Todo!
}

input TodoAddInput {
  name: String!
  content: String!
  userId: Int!
}

input TodoUpdateInput {
  name: String
  content: String
  userId: Int
  status: TodoStatusEnum
}

enum TodoStatusEnum {
  WAITING
  IN_PROGRESS
  CANCLED
  DONE
}
